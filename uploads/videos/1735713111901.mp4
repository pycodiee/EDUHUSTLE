<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>LearnGenie - Video Summary Generator</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
        }

        :root {
            --primary-color: #4f46e5;
            --secondary-color: #4338ca;
            --text-color: #1f2937;
            --light-bg: #f3f4f6;
            --success-color: #10b981;
            --error-color: #ef4444;
        }

        body {
            background: var(--light-bg);
            min-height: 100vh;
        }

        .nav {
            position: fixed;
            top: 0;
            width: 100%;
            padding: 1rem 2rem;
            background: var(--primary-color);
            display: flex;
            justify-content: space-between;
            align-items: center;
            z-index: 1000;
        }

        .logo {
            color: white;
            font-weight: bold;
            font-size: 1.5rem;
            text-decoration: none;
        }

        .nav-buttons {
            display: flex;
            gap: 1rem;
        }

        .btn {
            display: inline-block;
            padding: 0.75rem 1.5rem;
            background: var(--secondary-color);
            color: white;
            text-decoration: none;
            border-radius: 8px;
            transition: all 0.3s ease;
            border: none;
            cursor: pointer;
            font-size: 1rem;
        }

        .btn:hover {
            background: var(--primary-color);
            transform: translateY(-2px);
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 8rem 2rem 4rem;
        }

        .input-section {
            background: white;
            padding: 2rem;
            border-radius: 16px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            margin-bottom: 2rem;
        }

        .url-input-container {
            display: flex;
            gap: 1rem;
            margin-bottom: 1.5rem;
        }

        .url-input {
            flex: 1;
            padding: 1rem;
            border: 2px solid #e5e7eb;
            border-radius: 8px;
            font-size: 1rem;
            transition: border-color 0.3s ease;
        }

        .url-input:focus {
            outline: none;
            border-color: var(--primary-color);
        }

        .features-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1.5rem;
            margin-top: 2rem;
        }

        .feature-card {
            background: rgba(255, 255, 255, 0.7);
            padding: 1.5rem;
            border-radius: 12px;
            text-align: center;
        }

        .feature-icon {
            font-size: 2rem;
            margin-bottom: 1rem;
            color: var(--primary-color);
        }

        .summary-section {
            background: white;
            padding: 2rem;
            border-radius: 16px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            margin-top: 2rem;
        }

        .summary-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.5rem;
            padding-bottom: 1rem;
            border-bottom: 2px solid var(--light-bg);
        }

        .summary-content {
            line-height: 1.6;
            color: var(--text-color);
        }

        .video-preview {
            background: var(--light-bg);
            padding: 1.5rem;
            border-radius: 12px;
            margin-bottom: 1.5rem;
            display: flex;
            align-items: center;
            gap: 1.5rem;
        }

        .video-thumbnail {
            width: 180px;
            height: 120px;
            background: #ddd;
            border-radius: 8px;
            object-fit: cover;
        }

        .video-info {
            flex: 1;
        }

        .video-title {
            font-size: 1.25rem;
            margin-bottom: 0.5rem;
            color: var(--text-color);
        }

        .video-meta {
            color: #666;
            font-size: 0.9rem;
        }

        .loading-spinner {
            display: none;
            width: 24px;
            height: 24px;
            border: 3px solid var(--light-bg);
            border-top: 3px solid var(--primary-color);
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin: 0 auto;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .tools-section {
            display: flex;
            gap: 1rem;
            margin-top: 1.5rem;
        }

        .tool-btn {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.75rem 1.25rem;
            background: var(--light-bg);
            border: none;
            border-radius: 8px;
            color: var(--text-color);
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .tool-btn:hover {
            background: #e5e7eb;
        }

        .statistics {
            display: flex;
            gap: 2rem;
            margin-top: 2rem;
        }

        .stat-item {
            flex: 1;
            background: var(--light-bg);
            padding: 1rem;
            border-radius: 8px;
            text-align: center;
        }

        .stat-value {
            font-size: 1.5rem;
            font-weight: bold;
            color: var(--primary-color);
            margin-bottom: 0.5rem;
        }

        .stat-label {
            color: #666;
            font-size: 0.9rem;
        }

        @media (max-width: 768px) {
            .url-input-container {
                flex-direction: column;
            }
            .statistics {
                flex-direction: column;
                gap: 1rem;
            }
            .video-preview {
                flex-direction: column;
                text-align: center;
            }
            .video-thumbnail {
                width: 100%;
                max-width: 300px;
                margin: 0 auto;
            }
        }
        .error-message {
            color: var(--error-color);
            font-size: 0.9rem;
            margin-top: 0.5rem;
            display: none;
            text-align: center;
        }

        .loading-spinner {
            display: none;
            width: 24px;
            height: 24px;
            border: 3px solid var(--light-bg);
            border-top: 3px solid var(--primary-color);
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin: 1rem auto;
        }

        .summary-section {
            display: none; /* Hide initially */
        }
    </style>
</head>
<body>
    <nav class="nav">
        <a href="#" class="logo">LearnGenie</a>
        <div class="nav-buttons">
            <a href="#" class="btn">Dashboard</a>
            <a href="#" class="btn">Account</a>
        </div>
    </nav>

    <div class="container">
        <div class="input-section">
            <h1 style="margin-bottom: 1.5rem; color: var(--text-color);">Video Summary Generator</h1>
            <div class="url-input-container">
                <input type="text" class="url-input" placeholder="Paste your video URL here (YouTube, Vimeo, or any educational platform)">
                <button class="btn">Generate Summary</button>
            </div>
            <div class="features-grid">
                <div class="feature-card">
                    <div class="feature-icon">ðŸŽ¯</div>
                    <h3>Key Points</h3>
                    <p>Extract main ideas and crucial information</p>
                </div>
                <div class="feature-card">
                    <div class="feature-icon">âš¡</div>
                    <h3>Quick Analysis</h3>
                    <p>Get summaries in seconds</p>
                </div>
                <div class="feature-card">
                    <div class="feature-icon">ðŸ“Š</div>
                    <h3>Smart Insights</h3>
                    <p>AI-powered content analysis</p>
                </div>
            </div>
        </div>

        <div class="summary-section">
            <div class="video-preview">
                <img src="/api/placeholder/180/120" alt="Video thumbnail" class="video-thumbnail">
                <div class="video-info">
                    <h2 class="video-title">Video Title Will Appear Here</h2>
                    <p class="video-meta">Duration: 15:30 â€¢ Channel: Educational Channel</p>
                </div>
            </div>

            <div class="summary-header">
                <h2>Video Summary</h2>
                <div class="tools-section">
                    <button class="tool-btn">ðŸ“‹ Copy</button>
                    <button class="tool-btn">ðŸ“¥ Download</button>
                    <button class="tool-btn">ðŸ’¾ Save</button>
                </div>
            </div>

            <div class="loading-spinner"></div>
            
            <div class="summary-content">
                <p>Your video summary will appear here. The AI will analyze the video content and provide a comprehensive yet concise summary highlighting the key points, main ideas, and important takeaways.</p>
            </div>

            <div class="statistics">
                <div class="stat-item">
                    <div class="stat-value">5 min</div>
                    <div class="stat-label">Reading Time</div>
                </div>
                <div class="stat-item">
                    <div class="stat-value">8</div>
                    <div class="stat-label">Key Points</div>
                </div>
                <div class="stat-item">
                    <div class="stat-value">95%</div>
                    <div class="stat-label">Accuracy</div>
                </div>
            </div>
        </div>
    </div>

    <script>
        const urlInput = document.getElementById('urlInput');
        const summarizeBtn = document.getElementById('summarizeBtn');
        const errorMessage = document.getElementById('errorMessage');
        const loader = document.getElementById('loader');
        const summaryContainer = document.getElementById('summaryContainer');
        const summaryContent = document.getElementById('summaryContent');

        function isValidYouTubeUrl(url) {
            const youtubeRegex = /^(https?:\/\/)?(www\.)?(youtube\.com|youtu\.be)\/.+$/;
            return youtubeRegex.test(url);
        }

        function showError(message) {
            errorMessage.textContent = message;
            errorMessage.style.display = 'block';
            setTimeout(() => {
                errorMessage.style.display = 'none';
            }, 3000);
        }

        function setLoading(isLoading) {
            summarizeBtn.disabled = isLoading;
            loader.style.display = isLoading ? 'block' : 'none';
            summarizeBtn.textContent = isLoading ? 'Generating...' : 'Generate Summary';
        }

        async function generateSummary(url) {
            const response = await fetch('http://localhost:3000/api/summarize', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ url })
            });

            if (!response.ok) {
                const error = await response.json();
                throw new Error(error.error || 'Failed to generate summary');
            }

            const data = await response.json();
            return data.summary;
        }

        summarizeBtn.addEventListener('click', async () => {
            const url = urlInput.value.trim();
            
            if (!isValidYouTubeUrl(url)) {
                showError('Please enter a valid YouTube URL');
                return;
            }

            setLoading(true);
            summaryContainer.style.display = 'none';

            try {
                const summary = await generateSummary(url);
                summaryContent.textContent = summary;
                summaryContainer.style.display = 'block';
            } catch (error) {
                showError(error.message);
            } finally {
                setLoading(false);
            }
        });

        urlInput.addEventListener('keypress', (e) => {
            if (e.key === 'Enter') {
                summarizeBtn.click();
            }
        });
    </script>
</body>
</html>